/**
 * @license
 * Copyright (c) 2015 MediaMath Inc. All rights reserved.
 * This code may only be used under the BSD style license found at http://mediamath.github.io/strand/LICENSE.txt

*/
@import "_bourbon";
@import "_sizeresponsible";

:host {
	display: block;
	overflow: auto;
}

:host([x-scroll="none"]) #constrainer {
	max-width: 100%;
}

#pane {
	width: 100%;
	height: 100%;
	overflow-y: inherit;
	overflow-x: inherit;
	max-height: inherit;
}

#quad {
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	position: absolute;
	display: block;
	overflow: hidden;
	pointer-events: none;
}

#overlay {
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	display: flex;
	position: absolute;
	pointer-events: none;

	#fixes-flicker {
		top: 0;
		left: 0;
		right: 0;
		width: 100%;
		height: 100%;
		display: flex;
		pointer-events: none;
	}
}

#overlay > #fixes-flicker > ::content > *,
#overlay > ::content > * {
	pointer-events: all;
}


#constrainer {
	overflow-x: hidden;
	overflow-y: inherit;
}

#extent {
	height: 1px;
	margin-top: -1px;
	z-index: -1;
}

#footer {
	bottom: 0;
}

#header, #footer, #middle, #extent, #constrainer {
	min-width: 100%;
	position: relative;
}

.recycler-panel {
	position: relative;
}

:host([modifying]) #middle,
:host([measuring]) #middle {
	visibility: hidden;
}


